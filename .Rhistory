##basic cache= 4*4
#time4<-((7/4)^(log2(n/4))-1)*6*n^2+7^(log2(n/4))*(4^2*(4*4-1))
#basic cache= 8*8
#time5<-((7/4)^(log2(n/8))-1)*6*n^2+7^(log2(n/8))*(8^2*(8*8-1))
#basic cache=16*16
#time6<-((7/4)^(log2(n/16))-1)*6*n^2+7^(log2(n/16))*(16^2*(16*16-1))
result[s,2:3]<-c(time1,time2)
#result[s,2:7]<-log2(result[s,2:7])
result[s,1]<-n
}
result<-as.data.frame(result[])
names(result)<-c("n","Strassen's","Conventional")
data_long <- melt(result, id="n")
names(data_long)[3]<-"time"
library(ggplot2)
library(data.table)
ggplot(data=data_long,
aes(x=n, y=time, colour=variable,size=5)) +
geom_line(size=2)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
library(xtable)
print(xtable(result))
library(data.table)
setwd("C:/Users/H00037258/OneDrive/Documents/17 Spring/CS124/PA2")
len=10
result<-matrix(NA,ncol = 3,nrow = len)
for(s in 1:len)
{
n<-2^s
##pure strassen algorithm
time1<-((7/4)^(log2(n))-1)*6*n^2+7^(log2(n))
##pure naive algortihem
time2<-n^2*(2*n-1)
##basic cache =2*2
time3<-((7/4)^(log2(n/2))-1)*6*n^2+7^(log2(n/2))*(2^2*(2*2-1))
##basic cache= 4*4
time4<-((7/4)^(log2(n/4))-1)*6*n^2+7^(log2(n/4))*(4^2*(2*4-1))
#basic cache= 8*8
time5<-((7/4)^(log2(n/8))-1)*6*n^2+7^(log2(n/8))*(8^2*(2*8-1))
#basic cache=16*16
time6<-((7/4)^(log2(n/16))-1)*6*n^2+7^(log2(n/16))*(16^2*(2*16-1))
#result[s,2:3]<-c(time1,time2)
result[s,2:7]<-log2(result[s,2:7])
result[s,1]<-n
}
result<-as.data.frame(result[])
names(result)<-c("n","Strassen's","Conventional")
data_long <- melt(result, id="n")
names(data_long)[3]<-"time"
library(ggplot2)
library(data.table)
ggplot(data=data_long,
aes(x=n, y=time, colour=variable,size=5)) +
geom_line(size=2)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
library(xtable)
print(xtable(result))
library(data.table)
setwd("C:/Users/H00037258/OneDrive/Documents/17 Spring/CS124/PA2")
len=10
result<-matrix(NA,ncol = 3,nrow = len)
for(s in 1:len)
{
n<-2^s
##pure strassen algorithm
time1<-((7/4)^(log2(n))-1)*6*n^2+7^(log2(n))
##pure naive algortihem
time2<-n^2*(2*n-1)
##basic cache =2*2
time3<-((7/4)^(log2(n/2))-1)*6*n^2+7^(log2(n/2))*(2^2*(2*2-1))
##basic cache= 4*4
time4<-((7/4)^(log2(n/4))-1)*6*n^2+7^(log2(n/4))*(4^2*(2*4-1))
#basic cache= 8*8
time5<-((7/4)^(log2(n/8))-1)*6*n^2+7^(log2(n/8))*(8^2*(2*8-1))
#basic cache=16*16
time6<-((7/4)^(log2(n/16))-1)*6*n^2+7^(log2(n/16))*(16^2*(2*16-1))
result[s,2:7]<-c(time1,time3,time4,time5,time6,time2)
#result[s,2:7]<-log2(result[s,2:7])
result[s,1]<-n
}
result<-as.data.frame(result[])
names(result)<-c("n","Strassen's","2*2","4*4","8*8","16*16","Conventional")
data_long <- melt(result, id="n")
names(data_long)[3]<-"time"
library(ggplot2)
library(data.table)
ggplot(data=data_long,
aes(x=n, y=time, colour=variable,size=5)) +
geom_line(size=2)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
library(xtable)
print(xtable(result))
library(data.table)
setwd("C:/Users/H00037258/OneDrive/Documents/17 Spring/CS124/PA2")
len=10
result<-matrix(NA,ncol = 3,nrow = len)
for(s in 1:len)
{
n<-2^s
##pure strassen algorithm
time1<-((7/4)^(log2(n))-1)*6*n^2+7^(log2(n))
##pure naive algortihem
time2<-n^2*(2*n-1)
##basic cache =2*2
time3<-((7/4)^(log2(n/2))-1)*6*n^2+7^(log2(n/2))*(2^2*(2*2-1))
##basic cache= 4*4
time4<-((7/4)^(log2(n/4))-1)*6*n^2+7^(log2(n/4))*(4^2*(2*4-1))
#basic cache= 8*8
time5<-((7/4)^(log2(n/8))-1)*6*n^2+7^(log2(n/8))*(8^2*(2*8-1))
#basic cache=16*16
time6<-((7/4)^(log2(n/16))-1)*6*n^2+7^(log2(n/16))*(16^2*(2*16-1))
result[s,2:7]<-c(time1,time3,time4,time5,time6,time2)
#result[s,2:7]<-log2(result[s,2:7])
result[s,1]<-n
}
library(data.table)
setwd("C:/Users/H00037258/OneDrive/Documents/17 Spring/CS124/PA2")
len=10
result<-matrix(NA,ncol = 7,nrow = len)
for(s in 1:len)
{
n<-2^s
##pure strassen algorithm
time1<-((7/4)^(log2(n))-1)*6*n^2+7^(log2(n))
##pure naive algortihem
time2<-n^2*(2*n-1)
##basic cache =2*2
time3<-((7/4)^(log2(n/2))-1)*6*n^2+7^(log2(n/2))*(2^2*(2*2-1))
##basic cache= 4*4
time4<-((7/4)^(log2(n/4))-1)*6*n^2+7^(log2(n/4))*(4^2*(2*4-1))
#basic cache= 8*8
time5<-((7/4)^(log2(n/8))-1)*6*n^2+7^(log2(n/8))*(8^2*(2*8-1))
#basic cache=16*16
time6<-((7/4)^(log2(n/16))-1)*6*n^2+7^(log2(n/16))*(16^2*(2*16-1))
result[s,2:7]<-c(time1,time3,time4,time5,time6,time2)
#result[s,2:7]<-log2(result[s,2:7])
result[s,1]<-n
}
result<-as.data.frame(result[])
names(result)<-c("n","Strassen's","2*2","4*4","8*8","16*16","Conventional")
data_long <- melt(result, id="n")
names(data_long)[3]<-"time"
library(ggplot2)
library(data.table)
ggplot(data=data_long,
aes(x=n, y=time, colour=variable,size=5)) +
geom_line(size=2)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
library(xtable)
print(xtable(result))
library(data.table)
setwd("C:/Users/H00037258/OneDrive/Documents/17 Spring/CS124/PA2")
len=8
result<-matrix(NA,ncol = 7,nrow = len)
for(s in 1:len)
{
n<-2^s
##pure strassen algorithm
time1<-((7/4)^(log2(n))-1)*6*n^2+7^(log2(n))
##pure naive algortihem
time2<-n^2*(2*n-1)
##basic cache =2*2
time3<-((7/4)^(log2(n/2))-1)*6*n^2+7^(log2(n/2))*(2^2*(2*2-1))
##basic cache= 4*4
time4<-((7/4)^(log2(n/4))-1)*6*n^2+7^(log2(n/4))*(4^2*(2*4-1))
#basic cache= 8*8
time5<-((7/4)^(log2(n/8))-1)*6*n^2+7^(log2(n/8))*(8^2*(2*8-1))
#basic cache=16*16
time6<-((7/4)^(log2(n/16))-1)*6*n^2+7^(log2(n/16))*(16^2*(2*16-1))
result[s,2:7]<-c(time1,time3,time4,time5,time6,time2)
#result[s,2:7]<-log2(result[s,2:7])
result[s,1]<-n
}
result<-as.data.frame(result[])
names(result)<-c("n","Strassen's","2*2","4*4","8*8","16*16","Conventional")
data_long <- melt(result, id="n")
names(data_long)[3]<-"time"
library(ggplot2)
library(data.table)
ggplot(data=data_long,
aes(x=n, y=time, colour=variable,size=5)) +
geom_line(size=2)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
library(xtable)
print(xtable(result))
library(data.table)
setwd("C:/Users/H00037258/OneDrive/Documents/17 Spring/CS124/PA2")
len=8
result<-matrix(NA,ncol = 7,nrow = len)
for(s in 4:len)
{
n<-2^s
##pure strassen algorithm
time1<-((7/4)^(log2(n))-1)*6*n^2+7^(log2(n))
##pure naive algortihem
time2<-n^2*(2*n-1)
##basic cache =2*2
time3<-((7/4)^(log2(n/2))-1)*6*n^2+7^(log2(n/2))*(2^2*(2*2-1))
##basic cache= 4*4
time4<-((7/4)^(log2(n/4))-1)*6*n^2+7^(log2(n/4))*(4^2*(2*4-1))
#basic cache= 8*8
time5<-((7/4)^(log2(n/8))-1)*6*n^2+7^(log2(n/8))*(8^2*(2*8-1))
#basic cache=16*16
time6<-((7/4)^(log2(n/16))-1)*6*n^2+7^(log2(n/16))*(16^2*(2*16-1))
result[s,2:7]<-c(time1,time3,time4,time5,time6,time2)
#result[s,2:7]<-log2(result[s,2:7])
result[s,1]<-n
}
result<-as.data.frame(result[])
names(result)<-c("n","Strassen's","2*2","4*4","8*8","16*16","Conventional")
data_long <- melt(result, id="n")
names(data_long)[3]<-"time"
library(ggplot2)
library(data.table)
ggplot(data=data_long,
aes(x=n, y=time, colour=variable,size=5)) +
geom_line(size=2)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
library(xtable)
print(xtable(result))
library(data.table)
setwd("C:/Users/H00037258/OneDrive/Documents/17 Spring/CS124/PA2")
len=6
result<-matrix(NA,ncol = 7,nrow = len)
for(s in 4:len)
{
n<-2^s
##pure strassen algorithm
time1<-((7/4)^(log2(n))-1)*6*n^2+7^(log2(n))
##pure naive algortihem
time2<-n^2*(2*n-1)
##basic cache =2*2
time3<-((7/4)^(log2(n/2))-1)*6*n^2+7^(log2(n/2))*(2^2*(2*2-1))
##basic cache= 4*4
time4<-((7/4)^(log2(n/4))-1)*6*n^2+7^(log2(n/4))*(4^2*(2*4-1))
#basic cache= 8*8
time5<-((7/4)^(log2(n/8))-1)*6*n^2+7^(log2(n/8))*(8^2*(2*8-1))
#basic cache=16*16
time6<-((7/4)^(log2(n/16))-1)*6*n^2+7^(log2(n/16))*(16^2*(2*16-1))
result[s,2:7]<-c(time1,time3,time4,time5,time6,time2)
#result[s,2:7]<-log2(result[s,2:7])
result[s,1]<-n
}
result<-as.data.frame(result[])
names(result)<-c("n","Strassen's","2*2","4*4","8*8","16*16","Conventional")
data_long <- melt(result, id="n")
names(data_long)[3]<-"time"
library(ggplot2)
library(data.table)
ggplot(data=data_long,
aes(x=n, y=time, colour=variable,size=5)) +
geom_line(size=2)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
library(xtable)
print(xtable(result))
n<-2^12
for(i in 2:10)
{
temp=2^i
print(((7/4)^(log2(n/temp))-1)*6*n^2+7^(log2(n/temp))*(temp^2*(2*temp-1)))
}
n<-2^12
for(i in 2:10)
{
temp=2^i
print(temp)
print(((7/4)^(log2(n/temp))-1)*6*n^2+7^(log2(n/temp))*(temp^2*(2*temp-1)))
}
library(data.table)
setwd("C:/Users/H00037258/OneDrive/Documents/17 Spring/CS124/PA2")
len=10
result<-matrix(NA,ncol = 7,nrow = len)
for(s in 4:len)
{
n<-2^s
##pure strassen algorithm
time1<-((7/4)^(log2(n))-1)*6*n^2+7^(log2(n))
##pure naive algortihem
time2<-n^2*(2*n-1)
##basic cache =2*2
time3<-((7/4)^(log2(n/2))-1)*6*n^2+7^(log2(n/2))*(2^2*(2*2-1))
##basic cache= 4*4
time4<-((7/4)^(log2(n/4))-1)*6*n^2+7^(log2(n/4))*(4^2*(2*4-1))
#basic cache= 8*8
time5<-((7/4)^(log2(n/8))-1)*6*n^2+7^(log2(n/8))*(8^2*(2*8-1))
#basic cache=16*16
time6<-((7/4)^(log2(n/16))-1)*6*n^2+7^(log2(n/16))*(16^2*(2*16-1))
result[s,2:7]<-c(time1,time3,time4,time5,time6,time2)
#result[s,2:7]<-log2(result[s,2:7])
result[s,1]<-n
}
result<-as.data.frame(result[])
names(result)<-c("n","Strassen's","2*2","4*4","8*8","16*16","Conventional")
data_long <- melt(result, id="n")
names(data_long)[3]<-"time"
library(ggplot2)
library(data.table)
ggplot(data=data_long,
aes(x=n, y=time, colour=variable,size=5)) +
geom_line(size=2)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
library(xtable)
print(xtable(result))
n<-2^14
result<-matrix(NA,ncol = 2,nrow = 14)
for(i in 1:14)
{
temp=2^i
print(((7/4)^(log2(n/temp))-1)*6*n^2+7^(log2(n/temp))*(temp^2*(2*temp-1)))
}
n<-2^14
result<-matrix(NA,ncol = 2,nrow = 14)
for(i in 1:14)
{
temp=2^i
result[i,1]<-temp
result[i,2]<-(((7/4)^(log2(n/temp))-1)*6*n^2+7^(log2(n/temp))*(temp^2*(2*temp-1)))
}
result<-as.data.frame(result)
names(result)<-c("cross","runtime")
ggplot(data=result,
aes(x=cross, y=runtime, colour=variable,size=5)) +
geom_line(size=2)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
n<-2^14
result<-matrix(NA,ncol = 2,nrow = 14)
for(i in 1:14)
{
temp=2^i
result[i,1]<-temp
result[i,2]<-(((7/4)^(log2(n/temp))-1)*6*n^2+7^(log2(n/temp))*(temp^2*(2*temp-1)))
}
result<-as.data.frame(result)
names(result)<-c("cross","runtime")
ggplot(data=result,
aes(x=cross, y=runtime)) +
geom_line(size=2)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
len=8
n<-2^len
result<-matrix(NA,ncol = 2,nrow = len)
for(i in 1:len)
{
temp=2^i
result[i,1]<-temp
result[i,2]<-(((7/4)^(log2(n/temp))-1)*6*n^2+7^(log2(n/temp))*(temp^2*(2*temp-1)))
}
result<-as.data.frame(result)
names(result)<-c("cross","runtime")
ggplot(data=result,
aes(x=cross, y=runtime)) +
geom_line(size=2)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
len=8
n<-2^len
result<-matrix(NA,ncol = 2,nrow = len)
for(i in 1:len)
{
temp=2^i
result[i,1]<-temp
result[i,2]<-(((7/4)^(log2(n/temp))-1)*6*n^2+7^(log2(n/temp))*(temp^2*(2*temp-1)))
}
result<-as.data.frame(result)
names(result)<-c("cross","runtime")
ggplot(data=result,
aes(x=cross, y=runtime)) +
geom_line(size=1)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
len=10
n<-2^len
result<-matrix(NA,ncol = 2,nrow = len)
for(i in 1:len)
{
temp=2^i
result[i,1]<-temp
result[i,2]<-(((7/4)^(log2(n/temp))-1)*6*n^2+7^(log2(n/temp))*(temp^2*(2*temp-1)))
}
result<-as.data.frame(result)
names(result)<-c("cross","runtime")
ggplot(data=result,
aes(x=cross, y=runtime)) +
geom_line(size=1)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
len=12
n<-2^len
result<-matrix(NA,ncol = 2,nrow = len)
for(i in 1:len)
{
temp=2^i
result[i,1]<-temp
result[i,2]<-(((7/4)^(log2(n/temp))-1)*6*n^2+7^(log2(n/temp))*(temp^2*(2*temp-1)))
}
result<-as.data.frame(result)
names(result)<-c("cross","runtime")
ggplot(data=result,
aes(x=cross, y=runtime)) +
geom_line(size=1)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
len=14
n<-2^len
result<-matrix(NA,ncol = 2,nrow = len)
for(i in 1:len)
{
temp=2^i
result[i,1]<-temp
result[i,2]<-(((7/4)^(log2(n/temp))-1)*6*n^2+7^(log2(n/temp))*(temp^2*(2*temp-1)))
}
result<-as.data.frame(result)
names(result)<-c("cross","runtime")
ggplot(data=result,
aes(x=cross, y=runtime)) +
geom_line(size=1)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
len=8
n<-2^len
result<-matrix(NA,ncol = 2,nrow = len)
for(i in 1:len)
{
temp=2^i
result[i,1]<-temp
result[i,2]<-(((7/4)^(log2(n/temp))-1)*6*n^2+7^(log2(n/temp))*(temp^2*(2*temp-1)))
}
result<-as.data.frame(result)
names(result)<-c("cross","runtime")
ggplot(data=result,
aes(x=cross, y=runtime)) +
geom_line(size=1)+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
data.2049<-readClipboard()
data.2049<-readClipboard(raw = T)
data.2049<-read.table("record_2049",header = F)
View(data.2049)
aggregate(data.2049,list(data.2049$V1),mean)
warnings()
aggregate(data.2049,list(data.2049$V1),mean)
as.numeric(gsub("cross_over:", "", data.2049$V1))
data.2049$V1<-as.numeric(gsub("cross_over:", "", data.2049$V1))
aggregate(data.2049,list(data.2049$V1),mean)
data.2049<-read.table("record_2049",header = F)
data.2049$V1<-as.numeric(gsub("cross_over:", "", data.2049$V1))
aggregate(data.2049,list(data.2049$V1),mean)
data.2049<-aggregate(data.2049,list(data.2049$V1),mean)
data.2049<-cbind(data.2049$V1,data.2049$V2)
View(data.2049)
names(data.2049)<-c("cross","time")
data.2049<-read.table("record_2049",header = F)
data.2049$V1<-as.numeric(gsub("cross_over:", "", data.2049$V1))
data.2049<-aggregate(data.2049,list(data.2049$V1),mean)
ggplot(data=data.2049,
aes=(x=cross,y=time))+
geom_line(size=1)
data.2049<-read.table("record_2049",header = F)
data.2049$V1<-as.numeric(gsub("cross_over:", "", data.2049$V1))
data.2049<-aggregate(data.2049,list(data.2049$V1),mean)
ggplot(data=data.2049,aes(x=cross, y=time))+geom_line(size=1)
View(data.2049)
data.2049<-read.table("record_2049",header = F)
data.2049$V1<-as.numeric(gsub("cross_over:", "", data.2049$V1))
data.2049<-aggregate(data.2049,list(data.2049$V1),mean)
data.2049<-cbind(data.2049$V1,data.2049$V2)
names(data.2049)<-c("cross","time")
ggplot(data=data.2049,aes(x=cross, y=time))+geom_line(size=1)
data.2049<-read.table("record_2049",header = F)
data.2049$V1<-as.numeric(gsub("cross_over:", "", data.2049$V1))
data.2049<-aggregate(data.2049,list(data.2049$V1),mean)
data.2049<-as.data.frame(cbind(data.2049$V1,data.2049$V2))
names(data.2049)<-c("cross","time")
ggplot(data=data.2049,aes(x=cross, y=time))+geom_line(size=1)
data.2048<-read.table("record_2048",header = F)
data.2048<-read.table("record_2048",header = F)
data.2048$V1<-as.numeric(gsub("cross_over:", "", data.2048$V1))
data.2048<-aggregate(data.2048,list(data.2048$V1),mean)
data.2048<-as.data.frame(cbind(data.2048$V1,data.2048$V2))
names(data.2048)<-c("cross","time")
ggplot(data=data.2048,aes(x=cross, y=time))+geom_line(size=1)
View(data.2048)
data.2048<-read.table("record_2048",header = F)
data.2048$V1<-as.numeric(gsub("cross_over:", "", data.2048$V1))
data.2048<-aggregate(data.2048,list(data.2048$V1),mean)
data.2048<-as.data.frame(cbind(data.2048$V1,data.2048$V2))
names(data.2048)<-c("cross","time")
ggplot(data=data.2048,aes(x=cross, y=time))+geom_line(size=1)
library(ggplot2)
data.1024<-read.table("record_1024",header = F)
data.1024<-read.table("record_1024",header = F)
data.1024$V1<-as.numeric(gsub("cross_over:", "", data.1024$V1))
data.1024<-aggregate(data.1024,list(data.1024$V1),mean)
data.1024<-as.data.frame(cbind(data.1024$V1,data.1024$V2))
names(data.1024)<-c("cross","time")
ggplot(data=data.1024,aes(x=cross, y=time))+geom_line(size=1)
data.1025<-read.table("record_1025",header = F)
data.1025$V1<-as.numeric(gsub("cross_over:", "", data.1025$V1))
data.1025<-aggregate(data.1025,list(data.1025$V1),mean)
data.1025<-as.data.frame(cbind(data.1025$V1,data.1025$V2))
names(data.1025)<-c("cross","time")
ggplot(data=data.1025,aes(x=cross, y=time))+geom_line(size=1)
